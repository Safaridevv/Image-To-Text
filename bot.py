# @Safaridev
import os
import logging
import asyncio
import pytesseract
from pyrogram import Client, filters
from pyrogram.types import Message
from PIL import Image
from fastapi import FastAPI
import uvicorn

# ‚úÖ ‡§≤‡•â‡§ó‡§ø‡§Ç‡§ó ‡§∏‡•á‡§ü‡§Ö‡§™
logging.basicConfig(level=logging.INFO)

# ‚úÖ API ‡§ï‡•ç‡§∞‡•á‡§°‡•á‡§Ç‡§∂‡§ø‡§Ø‡§≤‡•ç‡§∏
API_ID = int(os.getenv("API_ID", "15561124"))
API_HASH = os.getenv("API_HASH", "277b0bfae263554a5211e856d389b9d8") 
BOT_TOKEN = os.getenv("BOT_TOKEN", "7140468132:AAF302Ux7AqKEr5yHVl0CLre6MfEIXUMB0Q")

# ‚úÖ Pyrogram Client
bot = Client("my_bot", api_id=API_ID, api_hash=API_HASH, bot_token=BOT_TOKEN)

# ‚úÖ FastAPI app
app = FastAPI()

# ‚úÖ ‡§π‡•á‡§≤‡•ç‡§• ‡§ö‡•á‡§ï API (Koyeb ‡§ï‡•á ‡§≤‡§ø‡§è ‡§ú‡§∞‡•Ç‡§∞‡•Ä)
@app.get("/")
async def health_check():
    return {"status": "running"}

# ‚úÖ ‡§á‡§Æ‡•á‡§ú ‡§∏‡•á ‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü ‡§®‡§ø‡§ï‡§æ‡§≤‡§®‡•á ‡§ï‡§æ ‡§´‡§Ç‡§ï‡•ç‡§∂‡§®
async def extract_text_from_image(image_path):
    try:
        img = Image.open(image_path)
        text = pytesseract.image_to_string(img)
        return text.strip() if text.strip() else "‚ö†Ô∏è ‡§ï‡•ã‡§à ‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü ‡§®‡§π‡•Ä‡§Ç ‡§Æ‡§ø‡§≤‡§æ‡•§"
    except Exception as e:
        return f"‚ùå ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø ‡§π‡•Å‡§à: {str(e)}"

# ‚úÖ ‡§´‡•ã‡§ü‡•ã ‡§π‡•à‡§Ç‡§°‡§≤ ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§π‡•à‡§Ç‡§°‡§≤‡§∞
@bot.on_message(filters.photo)
async def handle_photo(client, message: Message):
    file_path = await message.download()
    extracted_text = await extract_text_from_image(file_path)
    
    # ‚úÖ ‡§´‡§º‡§æ‡§á‡§≤ ‡§°‡§ø‡§≤‡•Ä‡§ü ‡§ï‡§∞‡§®‡§æ
    try:
        os.remove(file_path)
    except Exception as e:
        logging.warning(f"‡§´‡§º‡§æ‡§á‡§≤ ‡§°‡§ø‡§≤‡•Ä‡§ü ‡§ï‡§∞‡§®‡•á ‡§Æ‡•á‡§Ç ‡§§‡•ç‡§∞‡•Å‡§ü‡§ø: {e}")

    await message.reply_text(f"üìú **‡§®‡§ø‡§ï‡§æ‡§≤‡§æ ‡§ó‡§Ø‡§æ ‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü:**\n\n```{extracted_text}```", parse_mode="markdown")

# ‚úÖ ‡§∏‡•ç‡§ü‡§æ‡§∞‡•ç‡§ü ‡§ï‡§Æ‡§æ‡§Ç‡§°
@bot.on_message(filters.command("start"))
async def start_command(client, message: Message):
    await message.reply_text("üëã **‡§®‡§Æ‡§∏‡•ç‡§§‡•á!**\n\n‡§Æ‡•à‡§Ç ‡§è‡§ï **OCR ‡§¨‡•â‡§ü** ‡§π‡•Ç‡§Å‡•§ ‡§ï‡•ã‡§à ‡§≠‡•Ä **‡§´‡•ã‡§ü‡•ã ‡§≠‡•á‡§ú‡•ã**, ‡§î‡§∞ ‡§Æ‡•à‡§Ç ‡§â‡§∏‡§Æ‡•á‡§Ç ‡§∏‡•á **‡§ü‡•á‡§ï‡•ç‡§∏‡•ç‡§ü** ‡§®‡§ø‡§ï‡§æ‡§≤‡§ï‡§∞ ‡§µ‡§æ‡§™‡§∏ ‡§≠‡•á‡§ú ‡§¶‡•Ç‡§Å‡§ó‡§æ‡•§")

# ‚úÖ Pyrogram ‡§î‡§∞ FastAPI ‡§ï‡•ã Async ‡§§‡§∞‡•Ä‡§ï‡•á ‡§∏‡•á ‡§∞‡§® ‡§ï‡§∞‡§®‡•á ‡§ï‡§æ ‡§∏‡§π‡•Ä ‡§§‡§∞‡•Ä‡§ï‡§æ
async def main():
    await bot.start()
    config = uvicorn.Config(app, host="0.0.0.0", port=8080, log_level="info")
    server = uvicorn.Server(config)
    await server.serve()
    await bot.stop()

if __name__ == "__main__":
    asyncio.run(main())
